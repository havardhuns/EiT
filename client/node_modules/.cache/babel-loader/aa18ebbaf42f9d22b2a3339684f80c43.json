{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/havardhunshamar/EiT/client/src/components/TemperatureDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport getTemperature from '../actions/temperatureActions';\n\nconst TemperatureDisplay = props => {\n  _s();\n\n  useEffect(() => {\n    dispatch(getTemperature());\n  }, []);\n  const currentTemperature = useSelector(state => state.weatherReducer.currentTemperature);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Current temperature at gl\\xF8shaugen: \", currentTemperature, \" \\xB0C\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TemperatureDisplay, \"86dGsASjjaJkRlLCscgBkDn4LDE=\", false, function () {\n  return [useSelector];\n});\n\n_c = TemperatureDisplay;\nexport default TemperatureDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemperatureDisplay\");","map":{"version":3,"sources":["/Users/havardhunshamar/EiT/client/src/components/TemperatureDisplay.js"],"names":["React","Component","useSelector","useDispatch","getTemperature","TemperatureDisplay","props","useEffect","dispatch","currentTemperature","state","weatherReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA;;AAEhCC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMK,kBAAkB,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,kBAA/B,CAAtC;AAEA,sBACI;AAAA,yDACwCA,kBADxC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAbD;;GAAMJ,kB;UAMyBH,W;;;KANzBG,kB;AAeN,eAAeA,kBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport getTemperature from '../actions/temperatureActions'\n\nconst TemperatureDisplay = props => {\n\n    useEffect(() => {\n        dispatch(getTemperature())\n    }, []) \n\n    const currentTemperature = useSelector(state => state.weatherReducer.currentTemperature)\n\n    return(\n        <div>\n            Current temperature at gløshaugen: {currentTemperature} °C\n        </div>\n    )\n}\n\nexport default TemperatureDisplay"]},"metadata":{},"sourceType":"module"}