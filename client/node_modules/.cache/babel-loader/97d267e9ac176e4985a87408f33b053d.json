{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/havardhunshamar/EiT/client/src/components/TemperatureDisplay.js\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTemperature } from '../actions/temperatureActions';\n\nconst TemperatureDisplay = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useEffect(_s(() => {\n    _s();\n\n    useDispatch(getTemperature());\n  }, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n    return [useDispatch];\n  }), []);\n  const currentTemperature = useSelector(state => state.weatherReducer.currentTemperature);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Current temperature at gl\\xF8shaugen: \", currentTemperature, \" \\xB0C\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(TemperatureDisplay, \"86dGsASjjaJkRlLCscgBkDn4LDE=\", false, function () {\n  return [useSelector];\n});\n\n_c = TemperatureDisplay;\nexport default TemperatureDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemperatureDisplay\");","map":{"version":3,"sources":["/Users/havardhunshamar/EiT/client/src/components/TemperatureDisplay.js"],"names":["useEffect","useSelector","useDispatch","getTemperature","TemperatureDisplay","props","currentTemperature","state","weatherReducer"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAAUC,WAAV,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAAQC,cAAR,QAA6B,+BAA7B;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA;;AAAA;;AAEhCL,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACZE,IAAAA,WAAW,CAACC,cAAc,EAAf,CAAX;AACH,GAFQ;AAAA,YACLD,WADK;AAAA,MAEN,EAFM,CAAT;AAIA,QAAMI,kBAAkB,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,kBAA/B,CAAtC;AAEA,sBACI;AAAA,yDACwCA,kBADxC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAbD;;IAAMF,kB;UAMyBH,W;;;KANzBG,kB;AAeN,eAAeA,kBAAf","sourcesContent":["import { useEffect } from 'react';\nimport {  useSelector, useDispatch } from 'react-redux'\nimport {getTemperature} from '../actions/temperatureActions'\n\nconst TemperatureDisplay = props => {\n\n    useEffect(() => {\n        useDispatch(getTemperature())\n    }, []) \n\n    const currentTemperature = useSelector(state => state.weatherReducer.currentTemperature)\n\n    return(\n        <div>\n            Current temperature at gløshaugen: {currentTemperature} °C\n        </div>\n    )\n}\n\nexport default TemperatureDisplay"]},"metadata":{},"sourceType":"module"}